// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
part 'game.freezed.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`, `clone`, `clone`, `eq`, `eq`, `eq`
// These functions have error during generation (see debug logs or enable `stop_on_error: true` for more details): `make_move`

@freezed
sealed class Cell with _$Cell {
  const Cell._();

  const factory Cell.empty() = Cell_Empty;
  const factory Cell.filled(Player field0) = Cell_Filled;

  Future<Cell> switchFn() =>
      RustLib.instance.api.crateApiGameCellSwitchFn(that: this);
}

class GameTurn {
  final List<List<Cell>> board;
  final Player turn;

  const GameTurn({required this.board, required this.turn});

  Future<bool> checkIfFull() =>
      RustLib.instance.api.crateApiGameGameTurnCheckIfFull(that: this);

  Future<Player?> checkWinner() =>
      RustLib.instance.api.crateApiGameGameTurnCheckWinner(that: this);

  // HINT: Make it `#[frb(sync)]` to let it become the default constructor of Dart class.
  static Future<GameTurn> newInstance() =>
      RustLib.instance.api.crateApiGameGameTurnNew();

  @override
  int get hashCode => board.hashCode ^ turn.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is GameTurn &&
          runtimeType == other.runtimeType &&
          board == other.board &&
          turn == other.turn;
}

enum Player { x, o }
